TABLES

CREATE TABLE USERS (
    USER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(100),
    EMAIL VARCHAR2(100) UNIQUE,
    PASSWORD VARCHAR2(255),
    ROLE VARCHAR2(20), -- 'STUDENT' or 'INSTRUCTOR'
    BIO CLOB,          -- Only for instructors; NULL for students
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE COURSES (
    COURSE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR2(100),
    DESCRIPTION CLOB,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INSTRUCTOR_ID NUMBER,
    CONSTRAINT FK_COURSE_INSTRUCTOR FOREIGN KEY (INSTRUCTOR_ID)
        REFERENCES USERS(USER_ID)
);
CREATE TABLE MATERIALS (
    MATERIAL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    COURSE_ID NUMBER,
    TITLE VARCHAR2(100),
    CONTENT CLOB,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_MATERIAL_COURSE FOREIGN KEY (COURSE_ID)
        REFERENCES COURSES(COURSE_ID)
);
CREATE TABLE ENROLLMENTS (
    ENROLLMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STUDENT_ID NUMBER,
    COURSE_ID NUMBER,
    ENROLLMENT_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT FK_ENROLLMENT_STUDENT FOREIGN KEY (STUDENT_ID)
        REFERENCES USERS(USER_ID),
    CONSTRAINT FK_ENROLLMENT_COURSE FOREIGN KEY (COURSE_ID)
        REFERENCES COURSES(COURSE_ID),
    CONSTRAINT ENROLLMENT_UNIQUE UNIQUE (STUDENT_ID, COURSE_ID)
);
VIEWS
CREATE OR REPLACE VIEW VIEW_USERS AS
SELECT 
    USER_ID,
    NAME,
    EMAIL,
    ROLE,
    BIO,
    CREATED_AT
FROM USERS;

CREATE OR REPLACE VIEW VIEW_COURSES AS
SELECT 
    c.COURSE_ID,
    c.TITLE AS COURSE_TITLE,
    c.DESCRIPTION,
    u.NAME AS INSTRUCTOR_NAME,
    c.CREATED_AT
FROM COURSES c
JOIN USERS u ON c.INSTRUCTOR_ID = u.USER_ID
WHERE u.ROLE = 'INSTRUCTOR';

CREATE OR REPLACE VIEW VIEW_MATERIALS AS
SELECT 
    m.MATERIAL_ID,
    m.TITLE AS MATERIAL_TITLE,
    m.CONTENT,
    c.TITLE AS COURSE_TITLE,
    u.NAME AS INSTRUCTOR_NAME,
    m.CREATED_AT
FROM MATERIALS m
JOIN COURSES c ON m.COURSE_ID = c.COURSE_ID
JOIN USERS u ON c.INSTRUCTOR_ID = u.USER_ID
WHERE u.ROLE = 'INSTRUCTOR';

CREATE OR REPLACE VIEW VIEW_ENROLLMENTS AS
SELECT 
    e.ENROLLMENT_ID,
    u.NAME AS STUDENT_NAME,
    c.TITLE AS COURSE_TITLE,
    e.ENROLLMENT_DATE
FROM ENROLLMENTS e
JOIN USERS u ON e.STUDENT_ID = u.USER_ID
JOIN COURSES c ON e.COURSE_ID = c.COURSE_ID
WHERE u.ROLE = 'STUDENT';

SEQUENCES

CREATE SEQUENCE SEQ_USER_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQ_COURSE_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQ_ENROLLMENT_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE SEQ_MATERIAL_ID
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;
